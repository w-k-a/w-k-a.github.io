{"meta":{"title":"Fuqiong博客","subtitle":"保存好您做过的所有源文件","description":"请勿把工作与兴趣混合","author":"FuqiongWang","url":"http://example.com","root":"/"},"pages":[],"posts":[{"title":"","slug":"在项目上使用git","date":"2020-11-12T05:50:03.000Z","updated":"2020-11-13T02:00:16.830Z","comments":true,"path":"2020/11/12/在项目上使用git/","link":"","permalink":"http://example.com/2020/11/12/%E5%9C%A8%E9%A1%B9%E7%9B%AE%E4%B8%8A%E4%BD%BF%E7%94%A8git/","excerpt":"","text":"拉取最新项目和推送拉取最新项目和推送 ###git拉取最新项目和推送 在你需要加入一个项目开发时，需要在仓库把项目下载下来，进入gitlab， 在项目中找到你需要下载的项目地址，复制地址。这个地址分为http和ssh。 在本地创建了一个文件夹，进入文件里面，使用cmd（黑窗口）或者gitbash进行克隆项目。使用命令git clone 复制的http或ssh地址。 下载的下来的项目，进入到项目的下一目录，进入编剧器进行代码编剧时，我们首先需要拉取项目上最新的代码，git pull origin 分支名（分支名是你是从那个分支拉去下来的项目）。 在确定你的项目代码已经是最新的项目代码，在创建分支时，我们分为两种情况，一种是你跟你的同事不在一个分支上面进行项目编辑修改等，另一种情况在一个分支上面。你就进行创建你自己的分支：git branch 分支名，然后切换至你创建的分支：git checkout 分支名，当然你也可以一步直接创建并切换分支：git checkout -b 分支名 或者 git switch -c 分支名,。(如果您跟你的同事不在一个分支上面，分支名你可以按照自己的喜欢来命名（一般使用英文），但是你们在一个分支上面进行分组的话，命名就要根据大家的统一要求来) 查看创建的分支：git branch 当你对代码进行修改之后，需要添加到暂存区：git add . 或者 git add -A，两者均可o 提交暂存区的文件：git commit -m &quot;xx&quot;,双引号里面的xx代表的是对修改的内容做一个相关的解释，在每次修改代码时，如果不用git add提交到暂存区，是无法用commit进行提交。 从本地推送到分支上面，git push origin 分支名 切换至主分支，git checkout master 和 git switch master (一般默认主分支都为master) 删除本地分支：git branch -d 删除分支名：git branch -D 分支名,因为这个时候的分支还没有合并到当前分支，所以-D才能删除。 常用的git 命令 git status命令可以随时掌握工作区的状态 git diff命令可以查看被修改的部分。 在修改的时候我们可能会因为某些原因，觉得上一个版本才是合适的，所以这个时候需要怎么退回到上一个版本。HEAD指向的版本就是当前的版本，HEAD^指上一个版本，HEAD^^指上上一个版本，但是如果版本太多如第100个版本，则就用HEAD~100。 git可以使我们在任何一个版本，使用命令git reset --hard commit-d(commit-d提交的版本号id),使用git log就可以查看提交历史（，按住键盘q就能退出查看状态。），以便确定要退回到那个版本。 使用git reflog可以查看命令历史，以便确定要到回来的那个版本。 git撤销修改 当乱修改了工作区的某个文件内容，想直接丢弃工作内容的修改时，用命令 git checkout --file(文件名) 当你修改了工作区的某个文件，且还把他添加到暂存区时，想要丢弃修改，分成两步：第一步用命令 git reset HEAD (file)文件名，然后重复1 删除文件不同状况先手动删除文件，可以使用git rm (file) 和 git add (file)效果是一样的 如果不小心删错了文件，可以利用命令git checkout --(文件名)恢复到最新版本。","categories":[],"tags":[{"name":"git学习使用shi","slug":"git学习使用shi","permalink":"http://example.com/tags/git%E5%AD%A6%E4%B9%A0%E4%BD%BF%E7%94%A8shi/"}]},{"title":"路径的使用","slug":"路径的使用","date":"2020-11-10T06:40:49.000Z","updated":"2020-11-12T05:41:37.894Z","comments":true,"path":"2020/11/10/路径的使用/","link":"","permalink":"http://example.com/2020/11/10/%E8%B7%AF%E5%BE%84%E7%9A%84%E4%BD%BF%E7%94%A8/","excerpt":"","text":"在前端或者其他代码的使用，路径是一个不可缺少的部分。例如实际工作中，通常新建一个文件夹专门用于存放图像文件，这时再插入图像，就需要采用“路径”的方式来指定图像文件的位置。根目录 、当前目录。 路径可以分为：相对路径和绝对路径 1、相对路径 以引用文件之网页所在位置为参考基础，而建立出的目录路径。因此，当保存于不同目录的网页引用同一个文件时，所使用的路径将不相同，故称之为相对路径。 图像文件和HTML文件位于同一文件夹：只需输入图像文件的名称即可，如img src=”logo.gif” 或者img src=”./logo.gif” 。 图像文件位于HTML文件的下一级文件夹：输入文件夹名和文件名，之间用“/”隔开，如img src=”img/img01/logo.gif” 。 图像文件位于HTML文件的上一级文件夹：在文件名之前加入“../” ，如果是上两级，则需要使用 “../ ../”，以此类推，如img src=”../logo.gif” 。 2、绝对路径 绝对路径以Web站点根目录为参考基础的目录路径。之所以称为绝对，意指当所有网页引用同一个文件时，所使用的路径都是一样的。 “D:\\web\\img\\logo.gif”，或完整的网络地址，例如“https://ss1.baidu.com/6ONXsjip0QIZ8tyhnq/it/u=4152598231,1037344495&amp;fm=173&amp;app=25&amp;f=JPEG?w=218&amp;h=146&amp;s=5807D810BD00EACE342B64C6030070BD”。","categories":[],"tags":[{"name":"路径","slug":"路径","permalink":"http://example.com/tags/%E8%B7%AF%E5%BE%84/"}]},{"title":"浏览器引擎","slug":"浏览器引擎","date":"2020-11-10T03:25:33.000Z","updated":"2020-11-12T03:26:06.048Z","comments":true,"path":"2020/11/10/浏览器引擎/","link":"","permalink":"http://example.com/2020/11/10/%E6%B5%8F%E8%A7%88%E5%99%A8%E5%BC%95%E6%93%8E/","excerpt":"","text":"浏览器解析渲染页面原理 浏览器 最重要 最核心的部分是“解释引擎”，也就是“浏览器内核”： 负责对网页语法的解释（如HTML、JavaScript）并渲染（显示）网页。网页的工作过程需要使用到两个引擎：渲染引擎和javascript引擎什么是JavaScript引擎？简单来讲，就是能够提供执行JavaScript代码的运行环境所以，通常所谓的浏览器内核也就是浏览器所采用的渲染引擎，排版引擎(Rendering Engine，也有称渲染引擎)，渲染引擎决定了浏览器如何显示网页的内容以及页面的格式信息。不同的浏览器内核对网页编写语法的解释也有不同，因此同一网页在不同的内核的浏览器里的渲染（显示）效果也可能不同，这也是网页编写者需要在不同内核的浏览器中测试网页显示效果的原因。浏览器内核很多，如果加上所有的几乎没有什么人在用的非商业的免费内核，那么可能大约有10款以上甚至更多，不过通常我们比较常见的大约只有以下四种： Trident ：[ˈtraɪdnt]IE浏览器(遨游、世界之窗、腾讯TT…都是IE)Trident内核最慢IE 以Trident 作为内核引擎 ,前缀为–ms。 Gecko：[ˈgekəʊ] 开放源代码、以C++编写的网页排版引擎，是跨平台的FireFox是基于 Gecko 开发; presto：[ˈprestəʊ]目前公认网页浏览速度最快的浏览器内核，然而代价是牺牲了网页的兼容性。由Opera Software开发的浏览器排版引擎，Opera（欧朋浏览器），但由于市场选择问题，主要应用在手机平台–Opera mini Webkit：苹果公司自己的内核，google的chrome也使用webkit作为内核。是一个开源的浏览器引擎，同时WebKit 也是苹果Mac OS X 系统引擎框架版本的名称，它拥有清晰的源码结构、极快的渲染速度，包含的 WebCore 排版引擎和 JavaScriptCore解析引擎，均是从KDE的KHTML及KJS引擎衍生而来。许多网站都是按照IE来架设的，很多网站不兼容Webkit内核，比如登录界面、网银等网页均不可使用Webkit内核的浏览器。Safari([səˈfɑri]), Google Chrome, 傲游3, 猎豹浏览器, 百度浏览器 opera浏览器 基于 Webkit 开发。 注：2013年2月Opera宣布转向WebKit引擎注：2013年4月Opera宣布放弃WEBKIT，跟随GOOGLE的新开发的blink引擎","categories":[],"tags":[{"name":"浏览器解析渲染页面原理","slug":"浏览器解析渲染页面原理","permalink":"http://example.com/tags/%E6%B5%8F%E8%A7%88%E5%99%A8%E8%A7%A3%E6%9E%90%E6%B8%B2%E6%9F%93%E9%A1%B5%E9%9D%A2%E5%8E%9F%E7%90%86/"}]}],"categories":[],"tags":[{"name":"git学习使用shi","slug":"git学习使用shi","permalink":"http://example.com/tags/git%E5%AD%A6%E4%B9%A0%E4%BD%BF%E7%94%A8shi/"},{"name":"路径","slug":"路径","permalink":"http://example.com/tags/%E8%B7%AF%E5%BE%84/"},{"name":"浏览器解析渲染页面原理","slug":"浏览器解析渲染页面原理","permalink":"http://example.com/tags/%E6%B5%8F%E8%A7%88%E5%99%A8%E8%A7%A3%E6%9E%90%E6%B8%B2%E6%9F%93%E9%A1%B5%E9%9D%A2%E5%8E%9F%E7%90%86/"}]}